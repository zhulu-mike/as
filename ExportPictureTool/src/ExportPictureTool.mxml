<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="654" height="700" addedToStage="windowedapplication1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.graphics.codec.PNGEncoder;
			
			private var _file:File = new File();
			private var _fileFilter:Array = [new FileFilter(".swf", "*.swf")];
			private var _loader:Loader = new Loader();
			private var _classDic:Array;
			private var _loaderContext:LoaderContext;
			private var _listData:Array = [];
			private var _index:int = 0;
			private var png:PNGEncoder = new PNGEncoder();
			private var fileStream:FileStream = new FileStream();
			private var _baseUrl:String = "";
			private var swfs:Array = [];
			private var currentVO:FileVO;
			
			protected function browseFile(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				_file.browse(_fileFilter);
				_file.browseForDirectory("选择一个目录");
				_file.addEventListener(Event.SELECT, onSelect);
			}
			
			private function onSelect(event:Event):void
			{
				_index = 0;
				swfs.length = 0;
				_file.removeEventListener(Event.SELECT, onSelect);
				createFiles(_file);
//				_file.load();
//				_file.addEventListener(Event.COMPLETE, onComplete);
				if (swfs.length < 1)
				{
					Alert.show("目录下面没有swf文件");
					return;
				}
				maskShape.visible = true;
				tips.text = "正在处理第"+(_index+1)+"/"+swfs.length+"个文件："+swfs[_index].f.name;
				callLater(makeNewSwf);
			}
			
			private function createFiles(file:File):void
			{
				var files:Array = file.getDirectoryListing();
				var f:File, vo:FileVO;
				for each (f in files)
				{
					if (f.isDirectory)
					{
						createFiles(f);
					}else if (f.extension.toLocaleLowerCase() == "swf")
					{
						vo = new FileVO();
						vo.f = f;
						swfs.push(vo);
					}
				}
			}
			
			private function makeNewSwf():void
			{
				if (swfs.length <= _index)
				{
					Alert.show("操作完毕");
					maskShape.visible = false;
					return;
				}
				currentVO = swfs[_index];
				currentVO.f.addEventListener(Event.COMPLETE, onComplete);
				currentVO.f.load();
			}
			
			private function onComplete(event:Event):void
			{
				event.currentTarget.removeEventListener(Event.COMPLETE, onComplete);
				var byte:ByteArray = new ByteArray();
				currentVO.f.data.readBytes(byte);
//				currentVO.classes = SWFClassHelper.getSWFClasses(byte);
				_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadSwfComplete);
				_loaderContext = new LoaderContext();
				_loaderContext.allowCodeImport = true;
				_loader.loadBytes(currentVO.f.data, _loaderContext);
			}
			
			private function loadSwfComplete(event:Event):void
			{
				_index++;
				_loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, loadSwfComplete);
				var mainName:String = currentVO.f.name;
				currentVO.name = mainName = mainName.substring(0,mainName.lastIndexOf("."));
				var cl:Class = _loader.contentLoaderInfo.applicationDomain.getDefinition(mainName) as Class;
				if (cl)
				{
					currentVO.xml = cl.X_M_L as XML;
					var ss:XMLList = currentVO.xml.s;
					var action:XML, avo:ActionVO;
					for each (action in ss)
					{
						avo = new ActionVO();
						avo.name = action.@k;
						avo.xml = action;
						avo.directions = getDirections(action);
						currentVO.actions.push(avo);
						currentVO.actionStr += ("'"+avo.name+"'"+",");
					}
					if (currentVO.actionStr.length > 0)
						currentVO.actionStr = currentVO.actionStr.substr(0,currentVO.actionStr.length-1);
				}
				if (currentVO.actions.length > 0){
					callLater(createActionsFile);
				}else{
					if (swfs.length > _index)
						tips.text = "正在处理第"+(_index+1)+"/"+swfs.length+"个文件："+swfs[_index].f.name;
					callLater(makeNewSwf);
				}
			}
			
			private function createActionsFile():void
			{
				var avo:ActionVO = currentVO.actions.shift();
				var saveF:File = File.desktopDirectory;
				saveF = saveF.resolvePath("outcome2");
				var bmd:BitmapData, dvo:DirectionVO;
				var i:int = 0, len:int, h:Number, dbmd:BitmapData;
				var actName:String = currentVO.name + "." + avo.name;;
				var cl:Class = _loader.contentLoaderInfo.applicationDomain.getDefinition(actName) as Class;
				if (cl)
				{
					bmd = new cl() as BitmapData;
					len = avo.directions.length;
					h = bmd.height / len;
					for (i=0;i<len;i++)
					{
						dbmd = new BitmapData(bmd.width, h,true,0);
						dbmd.copyPixels(bmd,new Rectangle(0,h*i,bmd.width,h),new Point());
						dvo = new DirectionVO();
						dvo.dir = avo.directions[i];
						dvo.bmd = dbmd;
						avo.bitmapDatas.push(dvo);
						fileStream.open(new File(saveF.url+"/"+currentVO.name+"/"+avo.name+"/"+avo.name+dvo.dir+".png"),FileMode.WRITE);
						fileStream.writeBytes(png.encode(dbmd));
						fileStream.close();
					}
					var str:String = '﻿package ' + this.currentVO.name +
						'\n{'+
						'\n    import flash.display.MovieClip;'+
						'\n    import flash.system.Security;'+
						'\n'+
						'\n    public class '+ avo.name +' extends MovieClip'+
						'\n    {'+
						'\n        public static const STATUS_LIST:Array = ['+currentVO.actionStr+'];'+
						'\n        public static const X_M_L:XML = '+avo.xml+';'+
						'\n        public function '+ avo.name +'()'+
						'\n        {'+
						'\n            addFrameScript(0, frame1);'+
						'\n            return;'+
						'\n        }'+
						'\n'+
						'\n        function frame1()'+
						'\n        {'+
						'\n            try'+
						'\n            {'+
						'\n                Security.allowDomain("*");'+
						'\n            }'+
						'\n            catch (e:Error)'+
						'\n            {'+
						'\n            }'+
						'\n            return;'+
						'\n        }'+
						'\n    }'+
						'\n}' ;
					fileStream.open(new File(saveF.url+"/"+currentVO.name+"/"+avo.name+".as"),FileMode.WRITE);
					fileStream.writeUTFBytes(str);
					fileStream.close();
				}
				if (currentVO.actions.length > 0){
					callLater(createActionsFile);
				}else{
					if (swfs.length > _index)
						tips.text = "正在处理第"+(_index+1)+"/"+swfs.length+"个文件："+swfs[_index].f.name;
					callLater(makeNewSwf);
				}
			}
			
			private function getDirections(xml:XML):Array
			{
				var ps:XMLList = xml.p, p:XML;
				var dirs:Array = [];
				for each (p in ps)
				{
					if (dirs.indexOf(int(p.@a)) < 0)
					{
						dirs.push(int(p.@a));
					}
				}
				return dirs;
			}
			
			
			/** */
			private function setColor(bitmap:BitmapData, data:ByteArray, w:int, h:int, type:int):void
			{
//				data.endian = Endian.LITTLE_ENDIAN;
				var i:int =0, j:int = 0, color:uint, al:uint, red:uint, green:uint, blue:uint, realAl:Number;
				for (i;i<h;i++)
				{
					for (j=0;j<w;j++)
					{
						if (type == 20){
							al = data.readUnsignedByte();
							red = data.readUnsignedByte();
							green = data.readUnsignedByte();
							blue = data.readUnsignedByte();
							color = red << 16 | green << 8 | blue;
							bitmap.setPixel(j,i,color);
						}else if (type == 36){
							al = data.readUnsignedByte();
							red = data.readUnsignedByte();
							green = data.readUnsignedByte();
							blue = data.readUnsignedByte();
							realAl = al/255;
							red = red/realAl;
							green = green/realAl;
							blue = blue/realAl;
							color = al<<24 | red << 16 | green << 8 | blue;
							bitmap.setPixel32(j,i,color);
						}
						
						
					}
				}
			}
			
			private function selectAll(flag:Boolean):void
			{
				var len:int = _listData.length, i:int = 0;
				for (;i<len;i++)
				{
					_listData[i].selected = flag;
				}
			}
			
			protected function export(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var len:int = _listData.length;
				_index = 0;
				maskShape.visible = true;
				_baseUrl = _file.parent.url + "/";
				_baseUrl += _file.name.substr(0,_file.name.length-4);
				_baseUrl += "/";
				savePicture();
			}
			
			/** */
			private function savePicture():void
			{
				if (_listData.length < _index+1)
				{
					maskShape.visible = false;
					Alert.show("成功");
					return;
				}
				if (_listData[_index].selected)
				{
					var tempIns:BitmapData = _listData[_index].cla;
					var dataByte:ByteArray;
					dataByte = png.encode(tempIns);
					var exten:String = ".png";
					if (_listData[_index].type != 36 && _listData[_index].type != 20)
						exten = ".jpg";
					var f:File = new File(_baseUrl+"image_"+_index+exten);
					fileStream.open(f, FileMode.WRITE);
					fileStream.writeBytes(dataByte);
					fileStream.close();
				}
				_index++;
				savePicture();
			}
			
			protected function maskShape_resizeHandler(event:ResizeEvent):void
			{
				// TODO Auto-generated method stub
				if (stage == null)
					return;
				maskShape.graphics.clear();
				maskShape.graphics.beginFill(0x000000, 0.5);
				maskShape.graphics.drawRect(0,0,stage.stageWidth, stage.stageHeight);
				maskShape.graphics.endFill();
				tips.x = (stage.stageWidth - tips.width) * 0.5;
				tips.y = (stage.stageHeight - tips.height) * 0.5;
			}
			
			protected function windowedapplication1_creationCompleteHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				maskShape_resizeHandler(null);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button x="21" y="20" label="浏览" toolTip="打开swf文件目录" click="browseFile(event)"/>
	<s:Group x="21" y="85" width="611" height="525">
		<mx:TileList x="10" y="10" width="579" height="505" itemRenderer="PictureItem" id="list" selectable="false" columnWidth="110" rowHeight="128">
		</mx:TileList>
	</s:Group>
	<s:Button x="20" y="59" label="全选" click="selectAll(true)"/>
	<s:Button x="98" y="59" label="全取消" click="selectAll(false)"/>
	<s:Button x="220" y="59" label="导出" click="export(event)"/>
	<s:Group width="100%" height="100%" id="maskShape" visible="false" resize="maskShape_resizeHandler(event)">
		<s:Label text="保存中......" id="tips" width="120"/>
	</s:Group>
</s:WindowedApplication>
